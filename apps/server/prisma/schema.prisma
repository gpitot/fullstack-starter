generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model locations {
  id              String            @id @default(uuid())
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  name            String            @db.VarChar
  postcode        String            @db.VarChar
  location_prices location_prices[]
  tickets         tickets[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model payments {
  id               String            @id @default(uuid())
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  transaction_id  String            @db.VarChar
  amount_in_cents Int               @db.SmallInt
  receipt_url     String?           @db.VarChar
  payment_status  TransactionStatus @default(PENDING)
  ticket_payments ticket_payments[]
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ticket_payments {
  ticket_id   String 
  payment_id String
  payments   payments @relation(fields: [payment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tickets    tickets  @relation(fields: [ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([ticket_id, payment_id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tickets {
  id                 String            @id @default(uuid())
  created_at        DateTime          @default(now()) @db.Timestamptz(6)
  expires_at        DateTime          @db.Timestamptz(6)
  location          String
  registration      String            @db.VarChar
  email             String            @db.VarChar
  location_price_id String
  ticket_payments   ticket_payments[]
  locations         locations         @relation(fields: [location], references: [id], onDelete: NoAction, onUpdate: NoAction)
  location_prices   location_prices   @relation(fields: [location_price_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model location_prices {
  id                   String            @id @default(uuid())
  created_at          DateTime  @default(now()) @db.Timestamptz(6)
  price_in_cents      Int       @db.SmallInt
  duration_in_minutes Int       @db.SmallInt
  name                String    @db.VarChar
  description         String?   @db.VarChar
  location_id         String
  locations           locations @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tickets             tickets[]
}

enum TransactionStatus {
  PENDING
  PAYMENT_FAILED
  PAYMENT_COMPLETE
  CANCELLED
  REFUNDED
}
