openapi: "3.0.0"
info:
  title: "Interfaces"
  version: "1.0.0"
servers:
  - url: http://{hostname}/api/v1
    variables:
      hostname:
        default: localhost:8080
tags:
  - name: locations
    description: |
      The series of APIs for location use
  - name: tickets
    description: |
      The series of APIs for ticket use
  - name: payments
    description: |
      The series of APIs for payments use

paths:
  /locations:
    get:
      operationId: GetLocations
      tags: [locations]
      summary: Get locations
      responses:
        "200":
          description: "successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLocationsResponse"
        "500":
          $ref: "#/components/responses/ErrorInternal"

  /tickets:
    post:
      operationId: PostTicket
      tags: [tickets]
      summary: Create ticket
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTicketModel"
      responses:
        "200":
          description: "successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostTicketResponse"
        "500":
          $ref: "#/components/responses/ErrorInternal"

  /tickets/{ticketId}:
    get:
      operationId: GetTicket
      tags: [tickets]
      summary: Get ticket by id
      parameters:
        - in: path
          name: ticketId
          required: true
          description: "The id of the ticket"
          schema: { type: string }
      responses:
        "200":
          description: "successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTicketResponse"
        "500":
          $ref: "#/components/responses/ErrorInternal"

  /payments/{paymentIntentId}:
    get:
      operationId: GetPayments
      tags: [payments]
      summary: Get payments
      parameters:
        - in: path
          name: paymentIntentId
          required: true
          description: "The id of the paymentIntentId"
          schema: { type: string }
      responses:
        "200":
          description: "successful response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPaymentResponse"
        "500":
          $ref: "#/components/responses/ErrorInternal"

components:
  parameters:
    pathWithID:
      in: path
      schema: { type: number }
      name: id
      required: true
      description: The id to look up
    Authorization:
      in: header
      name: X-Auth
      schema:
        type: string
      required: true

  schemas:
    LocationModel:
      $ref: "schemas/locations/location.yml"

    LocationPriceModel:
      $ref: "schemas/locations/location_price.yml"

    TicketModel:
      $ref: "schemas/tickets/ticket.yml"

    CreateTicketModel:
      $ref: "schemas/tickets/ticket_create.yml"

    PaymentIntentModel:
      $ref: "schemas/payments/payment_intent.yml"

    PaymentStatus:
      $ref: "schemas/payments/payment_status.yml"

    PaymentModel:
      $ref: "schemas/payments/payment.yml"

    GetLocationsResponse:
      type: object
      required: [locations]
      properties:
        locations:
          type: array
          items:
            $ref: "#/components/schemas/LocationModel"

    GetTicketResponse:
      type: object
      required: [ticket]
      properties:
        ticket:
          $ref: "#/components/schemas/TicketModel"

    PostTicketResponse:
      type: object
      required: [ticket, payment]
      properties:
        ticket:
          $ref: "#/components/schemas/TicketModel"
        payment:
          $ref: "#/components/schemas/PaymentIntentModel"

    GetPaymentResponse:
      type: object
      required: [payment]
      properties:
        payment:
          $ref: "#/components/schemas/PaymentModel"

  responses:
    # API Gateway does not support response definitions here for '200' responses
    # It ignores error (non-200) responses
    ErrorInternal:
      $ref: "schemas/common_models.yml#/responses/ErrorInternal"
    ErrorUnauthenticated:
      $ref: "schemas/common_models.yml#/responses/ErrorUnauthenticated"
    ErrorUnauthorised:
      $ref: "schemas/common_models.yml#/responses/ErrorUnauthorised"
    ErrorNotFound:
      $ref: "schemas/common_models.yml#/responses/ErrorNotFound"
    ErrorBadRequest:
      $ref: "schemas/common_models.yml#/responses/ErrorBadRequest"
    ErrorConflict:
      $ref: "schemas/common_models.yml#/responses/ErrorConflict"
